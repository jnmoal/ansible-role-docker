- name: Include os specific variables
  include_vars: "{{ ansible_distribution }}.yml"

- name: Uninstall any older versions
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ docker_package_to_remove }}"
  become: yes

- name: Install pre requisites if any
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ docker_prerequisites }}"
  become: yes

- name: Include os specific tasks
  include_tasks: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"

- name: Install specific docker package
  package:
    name: "{{ docker_version }}"
    state: present
  become: yes
  when: docker_version is defined

- name: Install latest docker package
  package:
    name: docker-ce
    state: latest
  become: yes
  when: docker_version is undefined

- name: Start docker deamon
  service:
    name: docker
    enabled: yes
    state: started
  become: yes

- name: Create docker group
  group:
    name: "{{ docker_group_name }}"
    state: present
  become: yes
  when: use_docker_group

- name: Add users to docker group
  user:
    name: "{{ item }}"
    groups: "{{ docker_group_name }}"
  become: yes
  with_items: "{{ docker_group_users }}"
  when: use_docker_group

- name: Install docker-compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
    dest: "{{ docker_compose_dest }}"
    owner: "{{ ansible_user_id }}"
    mode: "u=rwx,g=rwx,o=rwx"
  become: yes
  when: install_docker_compose

- name: Install docker-machine
  get_url:
    url: "https://github.com/docker/machine/releases/download/{{ docker_machine_version }}/docker-machine-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
    dest: "{{ docker_machine_dest }}"
    owner: "{{ ansible_user_id }}"
    mode: "u=rwx,g=rwx,o=rwx"
  become: yes
  when: install_docker_machine

- import_tasks: checks.yml
  tags: 
    - checks
